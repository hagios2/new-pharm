{"remainingRequest":"/home/oteng/Projects/Vue/Pharm/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/oteng/Projects/Vue/Pharm/src/views/app/widgets/widgetStatistics.vue?vue&type=template&id=02d500af&","dependencies":[{"path":"/home/oteng/Projects/Vue/Pharm/src/views/app/widgets/widgetStatistics.vue","mtime":1641415518000},{"path":"/home/oteng/Projects/Vue/Pharm/node_modules/cache-loader/dist/cjs.js","mtime":1646200032053},{"path":"/home/oteng/Projects/Vue/Pharm/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1646200032952},{"path":"/home/oteng/Projects/Vue/Pharm/node_modules/cache-loader/dist/cjs.js","mtime":1646200032053},{"path":"/home/oteng/Projects/Vue/Pharm/node_modules/vue-loader/lib/index.js","mtime":1646200032952}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}