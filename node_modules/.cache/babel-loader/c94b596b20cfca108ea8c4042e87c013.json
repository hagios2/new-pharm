{"remainingRequest":"/home/oteng/Projects/Vue/Pharm/node_modules/babel-loader/lib/index.js!/home/oteng/Projects/Vue/Pharm/node_modules/vue-instantsearch/vue2/es/src/components/CurrentRefinements.vue.js","dependencies":[{"path":"/home/oteng/Projects/Vue/Pharm/node_modules/vue-instantsearch/vue2/es/src/components/CurrentRefinements.vue.js","mtime":1665756800407},{"path":"/home/oteng/Projects/Vue/Pharm/babel.config.js","mtime":1600706974000},{"path":"/home/oteng/Projects/Vue/Pharm/node_modules/cache-loader/dist/cjs.js","mtime":1646200032053},{"path":"/home/oteng/Projects/Vue/Pharm/node_modules/babel-loader/lib/index.js","mtime":1650451521054}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuam9pbi5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc2xpY2UuanMiOwppbXBvcnQgeyBjcmVhdGVTdWl0TWl4aW4gYXMgZSB9IGZyb20gIi4uL21peGlucy9zdWl0LmpzIjsKaW1wb3J0IHsgY3JlYXRlV2lkZ2V0TWl4aW4gYXMgdCB9IGZyb20gIi4uL21peGlucy93aWRnZXQuanMiOwppbXBvcnQgeyBjb25uZWN0Q3VycmVudFJlZmluZW1lbnRzIGFzIGkgfSBmcm9tICJpbnN0YW50c2VhcmNoLmpzL2VzL2Nvbm5lY3RvcnMvaW5kZXguanMiOwppbXBvcnQgeyBjcmVhdGVQYW5lbENvbnN1bWVyTWl4aW4gYXMgbiB9IGZyb20gIi4uL21peGlucy9wYW5lbC5qcyI7CmV4cG9ydCBkZWZhdWx0IHsKICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlcigpIHsKICAgIHZhciBlID0gdGhpcywKICAgICAgICB0ID0gZS4kY3JlYXRlRWxlbWVudCwKICAgICAgICBpID0gZS5fc2VsZi5fYyB8fCB0OwogICAgcmV0dXJuIGUuc3RhdGUgPyBpKCJkaXYiLCB7CiAgICAgIGNsYXNzOiBbZS5zdWl0KCksIGUubm9SZWZpbmVtZW50ICYmIGUuc3VpdCgiIiwgIm5vUmVmaW5lbWVudCIpXQogICAgfSwgW2UuX3QoImRlZmF1bHQiLCBbaSgidWwiLCB7CiAgICAgIGNsYXNzOiBlLnN1aXQoImxpc3QiKQogICAgfSwgZS5fbChlLnN0YXRlLml0ZW1zLCBmdW5jdGlvbiAodCkgewogICAgICByZXR1cm4gaSgibGkiLCB7CiAgICAgICAga2V5OiB0LmF0dHJpYnV0ZSwKICAgICAgICBjbGFzczogZS5zdWl0KCJpdGVtIikKICAgICAgfSwgW2UuX3QoIml0ZW0iLCBbaSgic3BhbiIsIHsKICAgICAgICBjbGFzczogZS5zdWl0KCJsYWJlbCIpCiAgICAgIH0sIFtlLl92KGUuX3MoZS5jYXBpdGFsaXplKHQubGFiZWwpKSArICI6ICIpXSksIGUuX3YoIiAiKSwgZS5fbCh0LnJlZmluZW1lbnRzLCBmdW5jdGlvbiAobikgewogICAgICAgIHJldHVybiBpKCJzcGFuIiwgewogICAgICAgICAga2V5OiBlLmNyZWF0ZUl0ZW1LZXkobiksCiAgICAgICAgICBjbGFzczogZS5zdWl0KCJjYXRlZ29yeSIpCiAgICAgICAgfSwgW2UuX3QoInJlZmluZW1lbnQiLCBbaSgic3BhbiIsIHsKICAgICAgICAgIGNsYXNzOiBlLnN1aXQoImNhdGVnb3J5TGFiZWwiKQogICAgICAgIH0sIFsicXVlcnkiID09PSBuLmF0dHJpYnV0ZSA/IGkoInEiLCBbZS5fdihlLl9zKG4ubGFiZWwpKV0pIDogW2UuX3YoIiAiICsgZS5fcyhuLmxhYmVsKSArICIgIildXSwgMiksIGUuX3YoIiAiKSwgaSgiYnV0dG9uIiwgewogICAgICAgICAgY2xhc3M6IGUuc3VpdCgiZGVsZXRlIiksCiAgICAgICAgICBvbjogewogICAgICAgICAgICBjbGljazogZnVuY3Rpb24gY2xpY2soZSkgewogICAgICAgICAgICAgIHJldHVybiB0LnJlZmluZShuKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIFtlLl92KCIg4pyVICIpXSldLCB7CiAgICAgICAgICByZWZpbmU6IHQucmVmaW5lLAogICAgICAgICAgcmVmaW5lbWVudDogbiwKICAgICAgICAgIGNyZWF0ZVVSTDogZS5zdGF0ZS5jcmVhdGVVUkwKICAgICAgICB9KV0sIDIpOwogICAgICB9KV0sIHsKICAgICAgICByZWZpbmU6IHQucmVmaW5lLAogICAgICAgIGl0ZW06IHQsCiAgICAgICAgY3JlYXRlVVJMOiBlLnN0YXRlLmNyZWF0ZVVSTAogICAgICB9KV0sIDIpOwogICAgfSksIDApXSwgewogICAgICByZWZpbmU6IGUuc3RhdGUucmVmaW5lLAogICAgICBpdGVtczogZS5zdGF0ZS5pdGVtcywKICAgICAgY3JlYXRlVVJMOiBlLnN0YXRlLmNyZWF0ZVVSTAogICAgfSldLCAyKSA6IGUuX2UoKTsKICB9LAogIHN0YXRpY1JlbmRlckZuczogW10sCiAgbmFtZTogIkFpc0N1cnJlbnRSZWZpbmVtZW50cyIsCiAgbWl4aW5zOiBbZSh7CiAgICBuYW1lOiAiQ3VycmVudFJlZmluZW1lbnRzIgogIH0pLCB0KHsKICAgIGNvbm5lY3RvcjogaQogIH0pLCBuKHsKICAgIG1hcFN0YXRlVG9DYW5SZWZpbmU6IGZ1bmN0aW9uIG1hcFN0YXRlVG9DYW5SZWZpbmUoZSkgewogICAgICByZXR1cm4gQm9vbGVhbihlLml0ZW1zKSAmJiBlLml0ZW1zLmxlbmd0aCA+IDA7CiAgICB9CiAgfSldLAogIHByb3BzOiB7CiAgICBpbmNsdWRlZEF0dHJpYnV0ZXM6IHsKICAgICAgdHlwZTogQXJyYXksCiAgICAgIGRlZmF1bHQ6IHZvaWQgMAogICAgfSwKICAgIGV4Y2x1ZGVkQXR0cmlidXRlczogewogICAgICB0eXBlOiBBcnJheSwKICAgICAgZGVmYXVsdDogdm9pZCAwCiAgICB9LAogICAgdHJhbnNmb3JtSXRlbXM6IHsKICAgICAgdHlwZTogRnVuY3Rpb24sCiAgICAgIGRlZmF1bHQ6IHZvaWQgMAogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIG5vUmVmaW5lbWVudDogZnVuY3Rpb24gbm9SZWZpbmVtZW50KCkgewogICAgICByZXR1cm4gdGhpcy5zdGF0ZSAmJiAwID09PSB0aGlzLnN0YXRlLml0ZW1zLmxlbmd0aDsKICAgIH0sCiAgICB3aWRnZXRQYXJhbXM6IGZ1bmN0aW9uIHdpZGdldFBhcmFtcygpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICBpbmNsdWRlZEF0dHJpYnV0ZXM6IHRoaXMuaW5jbHVkZWRBdHRyaWJ1dGVzLAogICAgICAgIGV4Y2x1ZGVkQXR0cmlidXRlczogdGhpcy5leGNsdWRlZEF0dHJpYnV0ZXMsCiAgICAgICAgdHJhbnNmb3JtSXRlbXM6IHRoaXMudHJhbnNmb3JtSXRlbXMKICAgICAgfTsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGNyZWF0ZUl0ZW1LZXk6IGZ1bmN0aW9uIGNyZWF0ZUl0ZW1LZXkoZSkgewogICAgICB2YXIgdCA9IGUuYXR0cmlidXRlLAogICAgICAgICAgaSA9IGUudmFsdWU7CiAgICAgIHJldHVybiBbdCwgZS50eXBlLCBpLCBlLm9wZXJhdG9yXS5qb2luKCI6Iik7CiAgICB9LAogICAgY2FwaXRhbGl6ZTogZnVuY3Rpb24gY2FwaXRhbGl6ZShlKSB7CiAgICAgIHJldHVybiBlID8gZS50b1N0cmluZygpLmNoYXJBdCgwKS50b0xvY2FsZVVwcGVyQ2FzZSgpICsgZS50b1N0cmluZygpLnNsaWNlKDEpIDogIiI7CiAgICB9CiAgfQp9Ow=="},{"version":3,"mappings":";;;;;;;;eA6De;AAACA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,GAAD;AAACA,qBAAD;AACbC,QAAM,uBADO;AAEbC,UAAQ,CACNC,EAAgB;AAAEF,UAAM;AAAR,GAAhBE,CADM,EAENC,EAAkB;AAAEC,eAAWC;AAAb,GAAlBF,CAFM,EAGNG,EAAyB;AACvBC,sDAAqBC,CAArBD,EAAqBC;AAAAA,aACnBC,QAAQD,EAAME,KAAdD,KAAwBD,EAAME,KAANF,CAAYG,MAAZH,GAAqB,CAD1BA;AAC0B;AAFxB,GAAzBF,CAHM,CAFK;AAUbM,SAAO;AACLC,wBAAoB;AAClBC,YAAMC,KADY;AAElBC,oBAASC;AAFS,KADf;AAKLC,wBAAoB;AAClBJ,YAAMC,KADY;AAElBC,oBAASC;AAFS,KALf;AASLE,oBAAgB;AACdL,YAAMM,QADQ;AAEdJ,oBAASC;AAFK;AATX,GAVM;AAwBbI,YAAU;AACRC;AAAAA,aACSC,KAAKf,KAALe,IAA0C,MAA5BA,KAAKf,KAALe,CAAWb,KAAXa,CAAiBZ,MADxCW;AACwCX,KAFhC;AAIRa;AAAAA,aACS;AACLX,4BAAoBU,KAAKV,kBADpB;AAELK,4BAAoBK,KAAKL,kBAFpB;AAGLC,wBAAgBI,KAAKJ;AAHhB,OADTK;AAIyBL;AARjB,GAxBG;AAoCbM,WAAS;AACPC,0CAAcC,CAAdD,EAAcC;AAAAA;AAAAA;AAAAA,aACL,CAACC,CAAD,EAACA,MAAD,EAAkBC,CAAlB,EAAkBA,UAAlB,EAAmCC,IAAnC,CAAwC,GAAxC,CADKH;AACmC,KAF1C;AAIPI,oCAAWF,CAAXE,EAAWF;AAAAA,aACJA,IAEHA,EACGG,QADHH,GAEGI,MAFHJ,CAEU,CAFVA,EAGGK,iBAHHL,KAGyBA,EAAMG,QAANH,GAAiBM,KAAjBN,CAAuB,CAAvBA,CALtBA,GAAc,EADVA;AACU;AALd;AApCI","names":["render","name","mixins","createSuitMixin","createWidgetMixin","connector","connectCurrentRefinements","createPanelConsumerMixin","mapStateToCanRefine","state","Boolean","items","length","props","includedAttributes","type","Array","default","undefined","excludedAttributes","transformItems","Function","computed","noRefinement","this","widgetParams","methods","createItemKey","ref","attribute","value","join","capitalize","toString","charAt","toLocaleUpperCase","slice"],"sources":["../../../../src/components/CurrentRefinements.vue"],"sourcesContent":["<template>\n  <div\n    :class=\"[suit(), noRefinement && suit('','noRefinement')]\"\n    v-if=\"state\"\n  >\n    <slot\n      :refine=\"state.refine\"\n      :items=\"state.items\"\n      :createURL=\"state.createURL\"\n    >\n      <ul :class=\"suit('list')\">\n        <li\n          v-for=\"item in state.items\"\n          :key=\"item.attribute\"\n          :class=\"suit('item')\"\n        >\n          <slot\n            name=\"item\"\n            :refine=\"item.refine\"\n            :item=\"item\"\n            :createURL=\"state.createURL\"\n          >\n            <span :class=\"suit('label')\">{{ capitalize(item.label) }}: </span>\n            <span\n              v-for=\"refinement in item.refinements\"\n              :key=\"createItemKey(refinement)\"\n              :class=\"suit('category')\"\n            >\n              <slot\n                name=\"refinement\"\n                :refine=\"item.refine\"\n                :refinement=\"refinement\"\n                :createURL=\"state.createURL\"\n              >\n                <span :class=\"suit('categoryLabel')\">\n                  <q v-if=\"refinement.attribute === 'query'\">{{ refinement.label }}</q>\n                  <template v-else>\n                    {{ refinement.label }}\n                  </template>\n                </span>\n                <button\n                  :class=\"suit('delete')\"\n                  @click=\"item.refine(refinement)\"\n                >\n                  âœ•\n                </button>\n              </slot>\n            </span>\n          </slot>\n        </li>\n      </ul>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport { createWidgetMixin } from '../mixins/widget';\nimport { connectCurrentRefinements } from 'instantsearch.js/es/connectors';\nimport { createPanelConsumerMixin } from '../mixins/panel';\nimport { createSuitMixin } from '../mixins/suit';\n\nexport default {\n  name: 'AisCurrentRefinements',\n  mixins: [\n    createSuitMixin({ name: 'CurrentRefinements' }),\n    createWidgetMixin({ connector: connectCurrentRefinements }),\n    createPanelConsumerMixin({\n      mapStateToCanRefine: state =>\n        Boolean(state.items) && state.items.length > 0,\n    }),\n  ],\n  props: {\n    includedAttributes: {\n      type: Array,\n      default: undefined,\n    },\n    excludedAttributes: {\n      type: Array,\n      default: undefined,\n    },\n    transformItems: {\n      type: Function,\n      default: undefined,\n    },\n  },\n  computed: {\n    noRefinement() {\n      return this.state && this.state.items.length === 0;\n    },\n    widgetParams() {\n      return {\n        includedAttributes: this.includedAttributes,\n        excludedAttributes: this.excludedAttributes,\n        transformItems: this.transformItems,\n      };\n    },\n  },\n  methods: {\n    createItemKey({ attribute, value, type, operator }) {\n      return [attribute, type, value, operator].join(':');\n    },\n    capitalize(value) {\n      if (!value) return '';\n      return (\n        value\n          .toString()\n          .charAt(0)\n          .toLocaleUpperCase() + value.toString().slice(1)\n      );\n    },\n  },\n};\n</script>\n"]}]}