{"remainingRequest":"/home/oteng/Projects/Vue/Pharm/node_modules/babel-loader/lib/index.js!/home/oteng/Projects/Vue/Pharm/src/store/modules/chat.js","dependencies":[{"path":"/home/oteng/Projects/Vue/Pharm/src/store/modules/chat.js","mtime":1600706974000},{"path":"/home/oteng/Projects/Vue/Pharm/babel.config.js","mtime":1600706974000},{"path":"/home/oteng/Projects/Vue/Pharm/node_modules/cache-loader/dist/cjs.js","mtime":1646200032053},{"path":"/home/oteng/Projects/Vue/Pharm/node_modules/babel-loader/lib/index.js","mtime":1650451521054}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCB7IHVzZXIsIGNvbnRhY3RzLCBjaGF0Q29sbGVjdGlvbiB9IGZyb20gIi4uLy4uL2RhdGEvY2hhdCI7CnZhciBzdGF0ZSA9IHsKICBjdXJyZW50VXNlcjogdXNlciwKICBjb250YWN0TGlzdDogY29udGFjdHMsCiAgcmVjZW50VXNlcnM6IFtdLAogIHNlbGVjdGVkVXNlcjogY29udGFjdHNbMF0sCiAgY2hhdHM6IGNoYXRDb2xsZWN0aW9uCn07CnZhciBnZXR0ZXJzID0gewogIGdldENvbnRhY3RMaXN0czogZnVuY3Rpb24gZ2V0Q29udGFjdExpc3RzKHN0YXRlKSB7CiAgICByZXR1cm4gc3RhdGUuY29udGFjdExpc3Q7CiAgfSwKICBnZXRDdXJyZW50VXNlcjogZnVuY3Rpb24gZ2V0Q3VycmVudFVzZXIoc3RhdGUpIHsKICAgIHJldHVybiBzdGF0ZS5jdXJyZW50VXNlcjsKICB9LAogIGdldFJlY2VudFVzZXI6IGZ1bmN0aW9uIGdldFJlY2VudFVzZXIoc3RhdGUpIHsKICAgIHJldHVybiBzdGF0ZS5yZWNlbnRVc2VyczsKICB9LAogIGdldFNlbGVjdGVkVXNlcjogZnVuY3Rpb24gZ2V0U2VsZWN0ZWRVc2VyKHN0YXRlKSB7CiAgICByZXR1cm4gc3RhdGUuc2VsZWN0ZWRVc2VyOwogIH0KfTsKdmFyIGFjdGlvbnMgPSB7CiAgY2hhbmdlU2VsZWN0ZWRVc2VyOiBmdW5jdGlvbiBjaGFuZ2VTZWxlY3RlZFVzZXIoX3JlZiwgaWQpIHsKICAgIHZhciBjb21taXQgPSBfcmVmLmNvbW1pdDsKICAgIGNvbW1pdCgidXBkYXRlU2VsZWN0ZWRVc2VyIiwgaWQpOwogIH0KfTsKdmFyIG11dGF0aW9ucyA9IHsKICB1cGRhdGVTZWxlY3RlZFVzZXI6IGZ1bmN0aW9uIHVwZGF0ZVNlbGVjdGVkVXNlcihzdGF0ZSwgaWQpIHsKICAgIHZhciBzVXNlciA9IHN0YXRlLmNvbnRhY3RMaXN0LmZpbHRlcihmdW5jdGlvbiAodXNlcikgewogICAgICByZXR1cm4gdXNlci5pZCA9PSBpZDsKICAgIH0pOwogICAgc3RhdGUuc2VsZWN0ZWRVc2VyID0gc1VzZXJbMF07IC8vIGNvbnNvbGUubG9nKHN0YXRlLnNlbGVjdGVkVXNlcik7CiAgfQp9OwpleHBvcnQgZGVmYXVsdCB7CiAgc3RhdGU6IHN0YXRlLAogIGdldHRlcnM6IGdldHRlcnMsCiAgYWN0aW9uczogYWN0aW9ucywKICBtdXRhdGlvbnM6IG11dGF0aW9ucwp9Ow=="},{"version":3,"sources":["/home/oteng/Projects/Vue/Pharm/src/store/modules/chat.js"],"names":["user","contacts","chatCollection","state","currentUser","contactList","recentUsers","selectedUser","chats","getters","getContactLists","getCurrentUser","getRecentUser","getSelectedUser","actions","changeSelectedUser","id","commit","mutations","updateSelectedUser","sUser","filter"],"mappings":";;AAAA,SAAQA,IAAR,EAAcC,QAAd,EAAwBC,cAAxB,QAA6C,iBAA7C;AAEA,IAAMC,KAAK,GAAG;AACZC,EAAAA,WAAW,EAAEJ,IADD;AAEZK,EAAAA,WAAW,EAAEJ,QAFD;AAGZK,EAAAA,WAAW,EAAE,EAHD;AAIZC,EAAAA,YAAY,EAAEN,QAAQ,CAAC,CAAD,CAJV;AAKZO,EAAAA,KAAK,EAAEN;AALK,CAAd;AAQA,IAAMO,OAAO,GAAG;AACdC,EAAAA,eAAe,EAAE,yBAAAP,KAAK;AAAA,WAAIA,KAAK,CAACE,WAAV;AAAA,GADR;AAEdM,EAAAA,cAAc,EAAE,wBAAAR,KAAK;AAAA,WAAIA,KAAK,CAACC,WAAV;AAAA,GAFP;AAGdQ,EAAAA,aAAa,EAAE,uBAAAT,KAAK;AAAA,WAAIA,KAAK,CAACG,WAAV;AAAA,GAHN;AAIdO,EAAAA,eAAe,EAAE,yBAAAV,KAAK;AAAA,WAAIA,KAAK,CAACI,YAAV;AAAA;AAJR,CAAhB;AAOA,IAAMO,OAAO,GAAG;AACdC,EAAAA,kBADc,oCACeC,EADf,EACmB;AAAA,QAAbC,MAAa,QAAbA,MAAa;AAC/BA,IAAAA,MAAM,CAAC,oBAAD,EAAuBD,EAAvB,CAAN;AACD;AAHa,CAAhB;AAMA,IAAME,SAAS,GAAG;AAChBC,EAAAA,kBAAkB,EAAE,4BAAChB,KAAD,EAAQa,EAAR,EAAe;AACjC,QAAMI,KAAK,GAAGjB,KAAK,CAACE,WAAN,CAAkBgB,MAAlB,CAAyB,UAAArB,IAAI;AAAA,aAAIA,IAAI,CAACgB,EAAL,IAAWA,EAAf;AAAA,KAA7B,CAAd;AACAb,IAAAA,KAAK,CAACI,YAAN,GAAqBa,KAAK,CAAC,CAAD,CAA1B,CAFiC,CAGjC;AACD;AALe,CAAlB;AAQA,eAAe;AACbjB,EAAAA,KAAK,EAALA,KADa;AAEbM,EAAAA,OAAO,EAAPA,OAFa;AAGbK,EAAAA,OAAO,EAAPA,OAHa;AAIbI,EAAAA,SAAS,EAATA;AAJa,CAAf","sourcesContent":["import {user, contacts, chatCollection} from \"../../data/chat\";\r\n\r\nconst state = {\r\n  currentUser: user,\r\n  contactList: contacts,\r\n  recentUsers: [],\r\n  selectedUser: contacts[0],\r\n  chats: chatCollection\r\n};\r\n\r\nconst getters = {\r\n  getContactLists: state => state.contactList,\r\n  getCurrentUser: state => state.currentUser,\r\n  getRecentUser: state => state.recentUsers,\r\n  getSelectedUser: state => state.selectedUser\r\n};\r\n\r\nconst actions = {\r\n  changeSelectedUser({commit}, id) {\r\n    commit(\"updateSelectedUser\", id);\r\n  }\r\n};\r\n\r\nconst mutations = {\r\n  updateSelectedUser: (state, id) => {\r\n    const sUser = state.contactList.filter(user => user.id == id);\r\n    state.selectedUser = sUser[0];\r\n    // console.log(state.selectedUser);\r\n  }\r\n};\r\n\r\nexport default {\r\n  state,\r\n  getters,\r\n  actions,\r\n  mutations\r\n};\r\n"]}]}